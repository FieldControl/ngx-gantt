import { Component, HostBinding, Inject } from '@angular/core';
import { todayHeight, todayWidth } from '../../../gantt.styles';
import { GANTT_UPPER_TOKEN } from '../../../gantt-upper';
import { GanttViewType } from '../../../class';
import { take, takeUntil } from 'rxjs/operators';
import { Subject, merge } from 'rxjs';
import { GanttDate } from '../../../utils/date';
import { isNumber } from '../../../utils/helpers';
import { NgStyle } from '@angular/common';
import * as i0 from "@angular/core";
import * as i1 from "../../../gantt-upper";
export class GanttCalendarHeaderComponent {
    get view() {
        return this.ganttUpper.view;
    }
    get height() {
        return this.ganttUpper.styles.headerHeight + 'px';
    }
    constructor(ganttUpper, ngZone, elementRef) {
        this.ganttUpper = ganttUpper;
        this.ngZone = ngZone;
        this.elementRef = elementRef;
        this.unsubscribe$ = new Subject();
        this.viewTypes = GanttViewType;
        this.className = `gantt-calendar gantt-calendar-header`;
    }
    ngOnInit() {
        // 头部日期定位
        this.ngZone.onStable.pipe(take(1)).subscribe(() => {
            merge(this.ganttUpper.viewChange, this.ganttUpper.view.start$)
                .pipe(takeUntil(this.unsubscribe$))
                .subscribe(() => {
                if (this.ganttUpper.viewType === GanttViewType.day)
                    this.setTodayPoint();
            });
        });
    }
    setTodayPoint() {
        const x = this.view.getTodayXPoint();
        const today = new GanttDate().getDate();
        const todayEle = this.elementRef.nativeElement.getElementsByClassName('gantt-calendar-today-overlay')[0];
        const rect = this.elementRef.nativeElement.getElementsByClassName('today-rect')[0];
        if (isNumber(x)) {
            if (rect) {
                rect.style.left = `${x - todayWidth / 2}px`;
                rect.style.top = `${this.ganttUpper.styles.headerHeight - todayHeight}px`;
                rect.innerHTML = today.toString();
            }
        }
        else {
            todayEle.style.display = 'none';
        }
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.0", ngImport: i0, type: GanttCalendarHeaderComponent, deps: [{ token: GANTT_UPPER_TOKEN }, { token: i0.NgZone }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.0", type: GanttCalendarHeaderComponent, isStandalone: true, selector: "gantt-calendar-header", host: { properties: { "class": "this.className", "style.height": "this.height" } }, ngImport: i0, template: "<div class=\"gantt-calendar-today-overlay\" [style.width.px]=\"view.width\">\n  <span class=\"today-rect\" [hidden]=\"ganttUpper.viewType !== viewTypes.day\"> </span>\n</div>\n<svg [attr.width]=\"view.width\" [attr.height]=\"ganttUpper.styles.headerHeight\">\n  <g>\n    @for (point of view.primaryDatePoints; track point.x) {\n    <text\n      class=\"primary-text\"\n      [ngStyle]=\"point.style\"\n      [class.today]=\"point.additions?.isToday\"\n      [class.weekend]=\"point.additions?.isWeekend\"\n      [attr.x]=\"point.x\"\n      [attr.y]=\"point.y\"\n    >\n      {{ point.text }}\n    </text>\n    } @for (point of view.secondaryDatePoints; track point.x) {\n    <text\n      class=\"secondary-text\"\n      [ngStyle]=\"point.style\"\n      [class.today]=\"point.additions?.isToday\"\n      [class.weekend]=\"point.additions?.isWeekend\"\n      [attr.x]=\"point.x\"\n      [attr.y]=\"point.y\"\n    >\n      {{ point.text }}\n    </text>\n    }\n\n    <g>\n      @for (point of view.primaryDatePoints; track point.x) {\n      <line\n        [attr.x1]=\"($index + 1) * view.primaryWidth\"\n        [attr.x2]=\"($index + 1) * view.primaryWidth\"\n        [attr.y1]=\"0\"\n        [attr.y2]=\"ganttUpper.styles.headerHeight\"\n        class=\"primary-line\"\n      ></line>\n      }\n    </g>\n\n    <g>\n      <line\n        [attr.x1]=\"0\"\n        [attr.x2]=\"view.width\"\n        [attr.y1]=\"ganttUpper.styles.headerHeight\"\n        [attr.y2]=\"ganttUpper.styles.headerHeight\"\n        class=\"header-line\"\n      ></line>\n    </g>\n  </g>\n</svg>\n", dependencies: [{ kind: "directive", type: NgStyle, selector: "[ngStyle]", inputs: ["ngStyle"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.0", ngImport: i0, type: GanttCalendarHeaderComponent, decorators: [{
            type: Component,
            args: [{ selector: 'gantt-calendar-header', standalone: true, imports: [NgStyle], template: "<div class=\"gantt-calendar-today-overlay\" [style.width.px]=\"view.width\">\n  <span class=\"today-rect\" [hidden]=\"ganttUpper.viewType !== viewTypes.day\"> </span>\n</div>\n<svg [attr.width]=\"view.width\" [attr.height]=\"ganttUpper.styles.headerHeight\">\n  <g>\n    @for (point of view.primaryDatePoints; track point.x) {\n    <text\n      class=\"primary-text\"\n      [ngStyle]=\"point.style\"\n      [class.today]=\"point.additions?.isToday\"\n      [class.weekend]=\"point.additions?.isWeekend\"\n      [attr.x]=\"point.x\"\n      [attr.y]=\"point.y\"\n    >\n      {{ point.text }}\n    </text>\n    } @for (point of view.secondaryDatePoints; track point.x) {\n    <text\n      class=\"secondary-text\"\n      [ngStyle]=\"point.style\"\n      [class.today]=\"point.additions?.isToday\"\n      [class.weekend]=\"point.additions?.isWeekend\"\n      [attr.x]=\"point.x\"\n      [attr.y]=\"point.y\"\n    >\n      {{ point.text }}\n    </text>\n    }\n\n    <g>\n      @for (point of view.primaryDatePoints; track point.x) {\n      <line\n        [attr.x1]=\"($index + 1) * view.primaryWidth\"\n        [attr.x2]=\"($index + 1) * view.primaryWidth\"\n        [attr.y1]=\"0\"\n        [attr.y2]=\"ganttUpper.styles.headerHeight\"\n        class=\"primary-line\"\n      ></line>\n      }\n    </g>\n\n    <g>\n      <line\n        [attr.x1]=\"0\"\n        [attr.x2]=\"view.width\"\n        [attr.y1]=\"ganttUpper.styles.headerHeight\"\n        [attr.y2]=\"ganttUpper.styles.headerHeight\"\n        class=\"header-line\"\n      ></line>\n    </g>\n  </g>\n</svg>\n" }]
        }], ctorParameters: () => [{ type: i1.GanttUpper, decorators: [{
                    type: Inject,
                    args: [GANTT_UPPER_TOKEN]
                }] }, { type: i0.NgZone }, { type: i0.ElementRef }], propDecorators: { className: [{
                type: HostBinding,
                args: ['class']
            }], height: [{
                type: HostBinding,
                args: ['style.height']
            }] } });
//# sourceMappingURL=data:application/json;base64,