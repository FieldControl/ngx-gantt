import { Component, HostBinding, Inject, Input, Output, EventEmitter } from '@angular/core';
import { GANTT_UPPER_TOKEN } from '../../gantt-upper';
import { IsGanttRangeItemPipe, IsGanttBarItemPipe, IsGanttCustomItemPipe } from '../../gantt.pipe';
import { NgxGanttBaselineComponent } from '../baseline/baseline.component';
import { NgxGanttBarComponent } from '../bar/bar.component';
import { NgxGanttRangeComponent } from '../range/range.component';
import { NgFor, NgIf, NgClass, NgTemplateOutlet } from '@angular/common';
import { GanttLinksComponent } from '../links/links.component';
import { GanttIconComponent } from '../icon/icon.component';
import { combineLatest, from, Subject, take, takeUntil } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "../../gantt-dom.service";
import * as i2 from "../../gantt-upper";
export class GanttMainComponent {
    constructor(ganttUpper, dom, ngZone) {
        this.ganttUpper = ganttUpper;
        this.dom = dom;
        this.ngZone = ngZone;
        this.barClick = new EventEmitter();
        this.lineClick = new EventEmitter();
        this.ganttMainClass = true;
        this.unsubscribe$ = new Subject();
    }
    ngOnInit() {
        const onStable$ = this.ngZone.isStable ? from(Promise.resolve()) : this.ngZone.onStable.pipe(take(1));
        this.ngZone.runOutsideAngular(() => {
            onStable$.pipe(takeUntil(this.unsubscribe$)).subscribe(() => {
                this.setupResize();
            });
        });
    }
    trackBy(index, item) {
        return item.id || index;
    }
    setupResize() {
        combineLatest([this.dom.getResize(), this.dom.getResizeByElement(this.dom.mainContainer)])
            .pipe(takeUntil(this.unsubscribe$))
            .subscribe(() => {
            this.dom.setVisibleRangeX();
        });
    }
    quickTime(item, type) {
        const date = type === 'left' ? item.start || item.end : item.end || item.start;
        this.ganttRoot.scrollToDate(date);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.0", ngImport: i0, type: GanttMainComponent, deps: [{ token: GANTT_UPPER_TOKEN }, { token: i1.GanttDomService }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.0", type: GanttMainComponent, isStandalone: true, selector: "gantt-main", inputs: { viewportItems: "viewportItems", flatItems: "flatItems", groupHeaderTemplate: "groupHeaderTemplate", itemTemplate: "itemTemplate", barTemplate: "barTemplate", rangeTemplate: "rangeTemplate", baselineTemplate: "baselineTemplate", ganttRoot: "ganttRoot", quickTimeFocus: "quickTimeFocus" }, outputs: { barClick: "barClick", lineClick: "lineClick" }, host: { properties: { "class.gantt-main-container": "this.ganttMainClass" } }, ngImport: i0, template: "<gantt-links-overlay [flatItems]=\"flatItems\" (lineClick)=\"lineClick.emit($event)\"></gantt-links-overlay>\n<div class=\"gantt-main-groups\" [style.width.px]=\"ganttUpper.view.width\">\n  <ng-container *ngFor=\"let data of viewportItems; trackBy: trackBy\">\n    <div class=\"gantt-group\" [style.height.px]=\"ganttUpper.styles.lineHeight\" [ngClass]=\"data.class\" *ngIf=\"data.items\">\n      <ng-template [ngTemplateOutlet]=\"groupHeaderTemplate\" [ngTemplateOutletContext]=\"{ group: data }\"></ng-template>\n    </div>\n    <div\n      *ngIf=\"!data.items\"\n      class=\"gantt-item\"\n      [style.height.px]=\"ganttUpper.styles.lineHeight\"\n      [class.gantt-main-item-active]=\"ganttUpper.isSelected(data.id)\"\n    >\n      <ng-container *ngIf=\"data.type | isGanttCustomItem\">\n        <ng-template\n          [ngTemplateOutlet]=\"itemTemplate\"\n          [ngTemplateOutletContext]=\"{\n            item: data.origin,\n            refs: data.refs,\n            baseline: ganttUpper.baselineItemsMap[data.id]?.origin,\n            baselineRefs: ganttUpper.baselineItemsMap[data.id]?.refs\n          }\"\n        >\n        </ng-template>\n      </ng-container>\n\n      <ng-container *ngIf=\"(data.type | isGanttRangeItem) || (data.type | isGanttBarItem)\">\n        <gantt-range *ngIf=\"data.type | isGanttRangeItem\" [template]=\"rangeTemplate\" [item]=\"data\"></gantt-range>\n        <gantt-bar *ngIf=\"data.type | isGanttBarItem\" [item]=\"data\" [template]=\"barTemplate\" (barClick)=\"barClick.emit($event)\"></gantt-bar>\n        <gantt-baseline\n          *ngIf=\"ganttUpper.baselineItemsMap[data.id]\"\n          [baselineItem]=\"ganttUpper.baselineItemsMap[data.id]\"\n          [template]=\"baselineTemplate\"\n        ></gantt-baseline>\n      </ng-container>\n    </div>\n  </ng-container>\n</div>\n\n@if (quickTimeFocus) {\n<div class=\"gantt-quick-time-focus-container\" [style.width.px]=\"ganttUpper.view.width\">\n  <div class=\"gantt-quick-time-focus\" [style.width.px]=\"dom.visibleRangeX().max - dom.visibleRangeX().min\">\n    <ng-container *ngFor=\"let data of viewportItems; let i = index; trackBy: trackBy\">\n      <div class=\"gantt-quick-time-focus-item\" [style.height.px]=\"ganttUpper.styles.lineHeight\">\n        <span class=\"ml-2\">\n          @if ((data.refs.x < dom.visibleRangeX().min ) && data.refs.width ) {\n          <a class=\"gantt-quick-time-focus-item-arrow link-secondary\" href=\"javascript:;\" (click)=\"quickTime(data.origin, 'left')\">\n            <gantt-icon iconName=\"arrow-left\"></gantt-icon>\n          </a>\n          }\n        </span>\n\n        <span class=\"mr-2\">\n          @if((data.refs.x + data.refs.width > dom.visibleRangeX().max) && data.refs.width) {\n          <a class=\"gantt-quick-time-focus-item-arrow link-secondary\" href=\"javascript:;\" (click)=\"quickTime(data.origin, 'right')\">\n            <gantt-icon iconName=\"arrow-right\"></gantt-icon>\n          </a>\n          }\n        </span>\n      </div>\n    </ng-container>\n  </div>\n</div>\n}\n", dependencies: [{ kind: "component", type: GanttLinksComponent, selector: "gantt-links-overlay", inputs: ["flatItems"], outputs: ["lineClick"] }, { kind: "directive", type: NgFor, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet", "ngTemplateOutletInjector"] }, { kind: "component", type: NgxGanttRangeComponent, selector: "ngx-gantt-range,gantt-range" }, { kind: "component", type: NgxGanttBarComponent, selector: "ngx-gantt-bar,gantt-bar", outputs: ["barClick"] }, { kind: "component", type: NgxGanttBaselineComponent, selector: "ngx-gantt-baseline,gantt-baseline", inputs: ["baselineItem", "template"] }, { kind: "pipe", type: IsGanttRangeItemPipe, name: "isGanttRangeItem" }, { kind: "pipe", type: IsGanttBarItemPipe, name: "isGanttBarItem" }, { kind: "pipe", type: IsGanttCustomItemPipe, name: "isGanttCustomItem" }, { kind: "component", type: GanttIconComponent, selector: "gantt-icon", inputs: ["iconName"] }] }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.0", ngImport: i0, type: GanttMainComponent, decorators: [{
            type: Component,
            args: [{ selector: 'gantt-main', standalone: true, imports: [
                        GanttLinksComponent,
                        NgFor,
                        NgIf,
                        NgClass,
                        NgTemplateOutlet,
                        NgxGanttRangeComponent,
                        NgxGanttBarComponent,
                        NgxGanttBaselineComponent,
                        IsGanttRangeItemPipe,
                        IsGanttBarItemPipe,
                        IsGanttCustomItemPipe,
                        GanttIconComponent
                    ], template: "<gantt-links-overlay [flatItems]=\"flatItems\" (lineClick)=\"lineClick.emit($event)\"></gantt-links-overlay>\n<div class=\"gantt-main-groups\" [style.width.px]=\"ganttUpper.view.width\">\n  <ng-container *ngFor=\"let data of viewportItems; trackBy: trackBy\">\n    <div class=\"gantt-group\" [style.height.px]=\"ganttUpper.styles.lineHeight\" [ngClass]=\"data.class\" *ngIf=\"data.items\">\n      <ng-template [ngTemplateOutlet]=\"groupHeaderTemplate\" [ngTemplateOutletContext]=\"{ group: data }\"></ng-template>\n    </div>\n    <div\n      *ngIf=\"!data.items\"\n      class=\"gantt-item\"\n      [style.height.px]=\"ganttUpper.styles.lineHeight\"\n      [class.gantt-main-item-active]=\"ganttUpper.isSelected(data.id)\"\n    >\n      <ng-container *ngIf=\"data.type | isGanttCustomItem\">\n        <ng-template\n          [ngTemplateOutlet]=\"itemTemplate\"\n          [ngTemplateOutletContext]=\"{\n            item: data.origin,\n            refs: data.refs,\n            baseline: ganttUpper.baselineItemsMap[data.id]?.origin,\n            baselineRefs: ganttUpper.baselineItemsMap[data.id]?.refs\n          }\"\n        >\n        </ng-template>\n      </ng-container>\n\n      <ng-container *ngIf=\"(data.type | isGanttRangeItem) || (data.type | isGanttBarItem)\">\n        <gantt-range *ngIf=\"data.type | isGanttRangeItem\" [template]=\"rangeTemplate\" [item]=\"data\"></gantt-range>\n        <gantt-bar *ngIf=\"data.type | isGanttBarItem\" [item]=\"data\" [template]=\"barTemplate\" (barClick)=\"barClick.emit($event)\"></gantt-bar>\n        <gantt-baseline\n          *ngIf=\"ganttUpper.baselineItemsMap[data.id]\"\n          [baselineItem]=\"ganttUpper.baselineItemsMap[data.id]\"\n          [template]=\"baselineTemplate\"\n        ></gantt-baseline>\n      </ng-container>\n    </div>\n  </ng-container>\n</div>\n\n@if (quickTimeFocus) {\n<div class=\"gantt-quick-time-focus-container\" [style.width.px]=\"ganttUpper.view.width\">\n  <div class=\"gantt-quick-time-focus\" [style.width.px]=\"dom.visibleRangeX().max - dom.visibleRangeX().min\">\n    <ng-container *ngFor=\"let data of viewportItems; let i = index; trackBy: trackBy\">\n      <div class=\"gantt-quick-time-focus-item\" [style.height.px]=\"ganttUpper.styles.lineHeight\">\n        <span class=\"ml-2\">\n          @if ((data.refs.x < dom.visibleRangeX().min ) && data.refs.width ) {\n          <a class=\"gantt-quick-time-focus-item-arrow link-secondary\" href=\"javascript:;\" (click)=\"quickTime(data.origin, 'left')\">\n            <gantt-icon iconName=\"arrow-left\"></gantt-icon>\n          </a>\n          }\n        </span>\n\n        <span class=\"mr-2\">\n          @if((data.refs.x + data.refs.width > dom.visibleRangeX().max) && data.refs.width) {\n          <a class=\"gantt-quick-time-focus-item-arrow link-secondary\" href=\"javascript:;\" (click)=\"quickTime(data.origin, 'right')\">\n            <gantt-icon iconName=\"arrow-right\"></gantt-icon>\n          </a>\n          }\n        </span>\n      </div>\n    </ng-container>\n  </div>\n</div>\n}\n" }]
        }], ctorParameters: () => [{ type: i2.GanttUpper, decorators: [{
                    type: Inject,
                    args: [GANTT_UPPER_TOKEN]
                }] }, { type: i1.GanttDomService }, { type: i0.NgZone }], propDecorators: { viewportItems: [{
                type: Input
            }], flatItems: [{
                type: Input
            }], groupHeaderTemplate: [{
                type: Input
            }], itemTemplate: [{
                type: Input
            }], barTemplate: [{
                type: Input
            }], rangeTemplate: [{
                type: Input
            }], baselineTemplate: [{
                type: Input
            }], ganttRoot: [{
                type: Input
            }], quickTimeFocus: [{
                type: Input
            }], barClick: [{
                type: Output
            }], lineClick: [{
                type: Output
            }], ganttMainClass: [{
                type: HostBinding,
                args: ['class.gantt-main-container']
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2FudHQtbWFpbi5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9nYW50dC9zcmMvY29tcG9uZW50cy9tYWluL2dhbnR0LW1haW4uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvZ2FudHQvc3JjL2NvbXBvbmVudHMvbWFpbi9nYW50dC1tYWluLmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsV0FBVyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQWUsTUFBTSxFQUFFLFlBQVksRUFBaUMsTUFBTSxlQUFlLENBQUM7QUFFeEksT0FBTyxFQUFFLGlCQUFpQixFQUFjLE1BQU0sbUJBQW1CLENBQUM7QUFDbEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLGtCQUFrQixFQUFFLHFCQUFxQixFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDbkcsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFDM0UsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDNUQsT0FBTyxFQUFFLHNCQUFzQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDbEUsT0FBTyxFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDekUsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFFL0QsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFNUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxJQUFJLEVBQUUsT0FBTyxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsTUFBTSxNQUFNLENBQUM7Ozs7QUFxQnJFLE1BQU0sT0FBTyxrQkFBa0I7SUEyQjNCLFlBQThDLFVBQXNCLEVBQVMsR0FBb0IsRUFBWSxN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O2dCQUVHLFdBQVc7c0JBQW5CLEtBQUs7Z0JBRUcsYUFBYTtzQkFBckIsS0FBSztnQkFFRyxnQkFBZ0I7c0JBQXhCLEtBQUs7Z0JBRUcsU0FBUztzQkFBakIsS0FBSztnQkFFRyxjQUFjO3NCQUF0QixLQUFLO2dCQUVJLFFBQVE7c0JBQWpCLE1BQU07Z0JBRUcsU0FBUztzQkFBbEIsTUFBTTtnQkFFb0MsY0FBYztzQkFBeEQsV0FBVzt1QkFBQyw0QkFBNEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIEhvc3RCaW5kaW5nLCBJbmplY3QsIElucHV0LCBUZW1wbGF0ZVJlZiwgT3V0cHV0LCBFdmVudEVtaXR0ZXIsIE9uSW5pdCwgQWZ0ZXJWaWV3SW5pdCwgTmdab25lIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBHYW50dEdyb3VwSW50ZXJuYWwsIEdhbnR0SXRlbUludGVybmFsLCBHYW50dEJhckNsaWNrRXZlbnQsIEdhbnR0TGluZUNsaWNrRXZlbnQgfSBmcm9tICcuLi8uLi9jbGFzcyc7XG5pbXBvcnQgeyBHQU5UVF9VUFBFUl9UT0tFTiwgR2FudHRVcHBlciB9IGZyb20gJy4uLy4uL2dhbnR0LXVwcGVyJztcbmltcG9ydCB7IElzR2FudHRSYW5nZUl0ZW1QaXBlLCBJc0dhbnR0QmFySXRlbVBpcGUsIElzR2FudHRDdXN0b21JdGVtUGlwZSB9IGZyb20gJy4uLy4uL2dhbnR0LnBpcGUnO1xuaW1wb3J0IHsgTmd4R2FudHRCYXNlbGluZUNvbXBvbmVudCB9IGZyb20gJy4uL2Jhc2VsaW5lL2Jhc2VsaW5lLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOZ3hHYW50dEJhckNvbXBvbmVudCB9IGZyb20gJy4uL2Jhci9iYXIuY29tcG9uZW50JztcbmltcG9ydCB7IE5neEdhbnR0UmFuZ2VDb21wb25lbnQgfSBmcm9tICcuLi9yYW5nZS9yYW5nZS5jb21wb25lbnQnO1xuaW1wb3J0IHsgTmdGb3IsIE5nSWYsIE5nQ2xhc3MsIE5nVGVtcGxhdGVPdXRsZXQgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgR2FudHRMaW5rc0NvbXBvbmVudCB9IGZyb20gJy4uL2xpbmtzL2xpbmtzLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBOZ3hHYW50dFJvb3RDb21wb25lbnQgfSBmcm9tICcuLy4uLy4uL3Jvb3QuY29tcG9uZW50JztcbmltcG9ydCB7IEdhbnR0SWNvbkNvbXBvbmVudCB9IGZyb20gJy4uL2ljb24vaWNvbi5jb21wb25lbnQnO1xuaW1wb3J0IHsgR2FudHREb21TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vZ2FudHQtZG9tLnNlcnZpY2UnO1xuaW1wb3J0IHsgY29tYmluZUxhdGVzdCwgZnJvbSwgU3ViamVjdCwgdGFrZSwgdGFrZVVudGlsIH0gZnJvbSAncnhqcyc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnZ2FudHQtbWFpbicsXG4gICAgdGVtcGxhdGVVcmw6ICcuL2dhbnR0LW1haW4uY29tcG9uZW50Lmh0bWwnLFxuICAgIHN0YW5kYWxvbmU6IHRydWUsXG4gICAgaW1wb3J0czogW1xuICAgICAgICBHYW50dExpbmtzQ29tcG9uZW50LFxuICAgICAgICBOZ0ZvcixcbiAgICAgICAgTmdJZixcbiAgICAgICAgTmdDbGFzcyxcbiAgICAgICAgTmdUZW1wbGF0ZU91dGxldCxcbiAgICAgICAgTmd4R2FudHRSYW5nZUNvbXBvbmVudCxcbiAgICAgICAgTmd4R2FudHRCYXJDb21wb25lbnQsXG4gICAgICAgIE5neEdhbnR0QmFzZWxpbmVDb21wb25lbnQsXG4gICAgICAgIElzR2FudHRSYW5nZUl0ZW1QaXBlLFxuICAgICAgICBJc0dhbnR0QmFySXRlbVBpcGUsXG4gICAgICAgIElzR2FudHRDdXN0b21JdGVtUGlwZSxcbiAgICAgICAgR2FudHRJY29uQ29tcG9uZW50XG4gICAgXVxufSlcbmV4cG9ydCBjbGFzcyBHYW50dE1haW5Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuICAgIEBJbnB1dCgpIHZpZXdwb3J0SXRlbXM6IChHYW50dEdyb3VwSW50ZXJuYWwgfCBHYW50dEl0ZW1JbnRlcm5hbClbXTtcblxuICAgIEBJbnB1dCgpIGZsYXRJdGVtczogKEdhbnR0R3JvdXBJbnRlcm5hbCB8IEdhbnR0SXRlbUludGVybmFsKVtdO1xuXG4gICAgQElucHV0KCkgZ3JvdXBIZWFkZXJUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcblxuICAgIEBJbnB1dCgpIGl0ZW1UZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcblxuICAgIEBJbnB1dCgpIGJhclRlbXBsYXRlOiBUZW1wbGF0ZVJlZjxhbnk+O1xuXG4gICAgQElucHV0KCkgcmFuZ2VUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcblxuICAgIEBJbnB1dCgpIGJhc2VsaW5lVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XG5cbiAgICBASW5wdXQoKSBnYW50dFJvb3Q6IE5neEdhbnR0Um9vdENvbXBvbmVudDtcblxuICAgIEBJbnB1dCgpIHF1aWNrVGltZUZvY3VzOiBib29sZWFuO1xuXG4gICAgQE91dHB1dCgpIGJhckNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxHYW50dEJhckNsaWNrRXZlbnQ+KCk7XG5cbiAgICBAT3V0cHV0KCkgbGluZUNsaWNrID0gbmV3IEV2ZW50RW1pdHRlcjxHYW50dExpbmVDbGlja0V2ZW50PigpO1xuXG4gICAgQEhvc3RCaW5kaW5nKCdjbGFzcy5nYW50dC1tYWluLWNvbnRhaW5lcicpIGdhbnR0TWFpbkNsYXNzID0gdHJ1ZTtcblxuICAgIHByaXZhdGUgdW5zdWJzY3JpYmUkID0gbmV3IFN1YmplY3Q8dm9pZD4oKTtcblxuICAgIGNvbnN0cnVjdG9yKEBJbmplY3QoR0FOVFRfVVBQRVJfVE9LRU4pIHB1YmxpYyBnYW50dFVwcGVyOiBHYW50dFVwcGVyLCBwdWJsaWMgZG9tOiBHYW50dERvbVNlcnZpY2UsIHByb3RlY3RlZCBuZ1pvbmU6IE5nWm9uZSkge31cblxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xuICAgICAgICBjb25zdCBvblN0YWJsZSQgPSB0aGlzLm5nWm9uZS5pc1N0YWJsZSA/IGZyb20oUHJvbWlzZS5yZXNvbHZlKCkpIDogdGhpcy5uZ1pvbmUub25TdGFibGUucGlwZSh0YWtlKDEpKTtcbiAgICAgICAgdGhpcy5uZ1pvbmUucnVuT3V0c2lkZUFuZ3VsYXIoKCkgPT4ge1xuICAgICAgICAgICAgb25TdGFibGUkLnBpcGUodGFrZVVudGlsKHRoaXMudW5zdWJzY3JpYmUkKSkuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldHVwUmVzaXplKCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgdHJhY2tCeShpbmRleDogbnVtYmVyLCBpdGVtOiBHYW50dEdyb3VwSW50ZXJuYWwgfCBHYW50dEl0ZW1JbnRlcm5hbCkge1xuICAgICAgICByZXR1cm4gaXRlbS5pZCB8fCBpbmRleDtcbiAgICB9XG5cbiAgICBwcml2YXRlIHNldHVwUmVzaXplKCkge1xuICAgICAgICBjb21iaW5lTGF0ZXN0KFt0aGlzLmRvbS5nZXRSZXNpemUoKSwgdGhpcy5kb20uZ2V0UmVzaXplQnlFbGVtZW50KHRoaXMuZG9tLm1haW5Db250YWluZXIpXSlcbiAgICAgICAgICAgIC5waXBlKHRha2VVbnRpbCh0aGlzLnVuc3Vic2NyaWJlJCkpXG4gICAgICAgICAgICAuc3Vic2NyaWJlKCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmRvbS5zZXRWaXNpYmxlUmFuZ2VYKCk7XG4gICAgICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBxdWlja1RpbWUoaXRlbTogR2FudHRJdGVtSW50ZXJuYWwsIHR5cGU6ICdsZWZ0JyB8ICdyaWdodCcpIHtcbiAgICAgICAgY29uc3QgZGF0ZSA9IHR5cGUgPT09ICdsZWZ0JyA/IGl0ZW0uc3RhcnQgfHwgaXRlbS5lbmQgOiBpdGVtLmVuZCB8fCBpdGVtLnN0YXJ0O1xuICAgICAgICB0aGlzLmdhbnR0Um9vdC5zY3JvbGxUb0RhdGUoZGF0ZSk7XG4gICAgfVxufVxuIiwiPGdhbnR0LWxpbmtzLW92ZXJsYXkgW2ZsYXRJdGVtc109XCJmbGF0SXRlbXNcIiAobGluZUNsaWNrKT1cImxpbmVDbGljay5lbWl0KCRldmVudClcIj48L2dhbnR0LWxpbmtzLW92ZXJsYXk+XG48ZGl2IGNsYXNzPVwiZ2FudHQtbWFpbi1ncm91cHNcIiBbc3R5bGUud2lkdGgucHhdPVwiZ2FudHRVcHBlci52aWV3LndpZHRoXCI+XG4gIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IGRhdGEgb2Ygdmlld3BvcnRJdGVtczsgdHJhY2tCeTogdHJhY2tCeVwiPlxuICAgIDxkaXYgY2xhc3M9XCJnYW50dC1ncm91cFwiIFtzdHlsZS5oZWlnaHQucHhdPVwiZ2FudHRVcHBlci5zdHlsZXMubGluZUhlaWdodFwiIFtuZ0NsYXNzXT1cImRhdGEuY2xhc3NcIiAqbmdJZj1cImRhdGEuaXRlbXNcIj5cbiAgICAgIDxuZy10ZW1wbGF0ZSBbbmdUZW1wbGF0ZU91dGxldF09XCJncm91cEhlYWRlclRlbXBsYXRlXCIgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cInsgZ3JvdXA6IGRhdGEgfVwiPjwvbmctdGVtcGxhdGU+XG4gICAgPC9kaXY+XG4gICAgPGRpdlxuICAgICAgKm5nSWY9XCIhZGF0YS5pdGVtc1wiXG4gICAgICBjbGFzcz1cImdhbnR0LWl0ZW1cIlxuICAgICAgW3N0eWxlLmhlaWdodC5weF09XCJnYW50dFVwcGVyLnN0eWxlcy5saW5lSGVpZ2h0XCJcbiAgICAgIFtjbGFzcy5nYW50dC1tYWluLWl0ZW0tYWN0aXZlXT1cImdhbnR0VXBwZXIuaXNTZWxlY3RlZChkYXRhLmlkKVwiXG4gICAgPlxuICAgICAgPG5nLWNvbnRhaW5lciAqbmdJZj1cImRhdGEudHlwZSB8IGlzR2FudHRDdXN0b21JdGVtXCI+XG4gICAgICAgIDxuZy10ZW1wbGF0ZVxuICAgICAgICAgIFtuZ1RlbXBsYXRlT3V0bGV0XT1cIml0ZW1UZW1wbGF0ZVwiXG4gICAgICAgICAgW25nVGVtcGxhdGVPdXRsZXRDb250ZXh0XT1cIntcbiAgICAgICAgICAgIGl0ZW06IGRhdGEub3JpZ2luLFxuICAgICAgICAgICAgcmVmczogZGF0YS5yZWZzLFxuICAgICAgICAgICAgYmFzZWxpbmU6IGdhbnR0VXBwZXIuYmFzZWxpbmVJdGVtc01hcFtkYXRhLmlkXT8ub3JpZ2luLFxuICAgICAgICAgICAgYmFzZWxpbmVSZWZzOiBnYW50dFVwcGVyLmJhc2VsaW5lSXRlbXNNYXBbZGF0YS5pZF0/LnJlZnNcbiAgICAgICAgICB9XCJcbiAgICAgICAgPlxuICAgICAgICA8L25nLXRlbXBsYXRlPlxuICAgICAgPC9uZy1jb250YWluZXI+XG5cbiAgICAgIDxuZy1jb250YWluZXIgKm5nSWY9XCIoZGF0YS50eXBlIHwgaXNHYW50dFJhbmdlSXRlbSkgfHwgKGRhdGEudHlwZSB8IGlzR2FudHRCYXJJdGVtKVwiPlxuICAgICAgICA8Z2FudHQtcmFuZ2UgKm5nSWY9XCJkYXRhLnR5cGUgfCBpc0dhbnR0UmFuZ2VJdGVtXCIgW3RlbXBsYXRlXT1cInJhbmdlVGVtcGxhdGVcIiBbaXRlbV09XCJkYXRhXCI+PC9nYW50dC1yYW5nZT5cbiAgICAgICAgPGdhbnR0LWJhciAqbmdJZj1cImRhdGEudHlwZSB8IGlzR2FudHRCYXJJdGVtXCIgW2l0ZW1dPVwiZGF0YVwiIFt0ZW1wbGF0ZV09XCJiYXJUZW1wbGF0ZVwiIChiYXJDbGljayk9XCJiYXJDbGljay5lbWl0KCRldmVudClcIj48L2dhbnR0LWJhcj5cbiAgICAgICAgPGdhbnR0LWJhc2VsaW5lXG4gICAgICAgICAgKm5nSWY9XCJnYW50dFVwcGVyLmJhc2VsaW5lSXRlbXNNYXBbZGF0YS5pZF1cIlxuICAgICAgICAgIFtiYXNlbGluZUl0ZW1dPVwiZ2FudHRVcHBlci5iYXNlbGluZUl0ZW1zTWFwW2RhdGEuaWRdXCJcbiAgICAgICAgICBbdGVtcGxhdGVdPVwiYmFzZWxpbmVUZW1wbGF0ZVwiXG4gICAgICAgID48L2dhbnR0LWJhc2VsaW5lPlxuICAgICAgPC9uZy1jb250YWluZXI+XG4gICAgPC9kaXY+XG4gIDwvbmctY29udGFpbmVyPlxuPC9kaXY+XG5cbkBpZiAocXVpY2tUaW1lRm9jdXMpIHtcbjxkaXYgY2xhc3M9XCJnYW50dC1xdWljay10aW1lLWZvY3VzLWNvbnRhaW5lclwiIFtzdHlsZS53aWR0aC5weF09XCJnYW50dFVwcGVyLnZpZXcud2lkdGhcIj5cbiAgPGRpdiBjbGFzcz1cImdhbnR0LXF1aWNrLXRpbWUtZm9jdXNcIiBbc3R5bGUud2lkdGgucHhdPVwiZG9tLnZpc2libGVSYW5nZVgoKS5tYXggLSBkb20udmlzaWJsZVJhbmdlWCgpLm1pblwiPlxuICAgIDxuZy1jb250YWluZXIgKm5nRm9yPVwibGV0IGRhdGEgb2Ygdmlld3BvcnRJdGVtczsgbGV0IGkgPSBpbmRleDsgdHJhY2tCeTogdHJhY2tCeVwiPlxuICAgICAgPGRpdiBjbGFzcz1cImdhbnR0LXF1aWNrLXRpbWUtZm9jdXMtaXRlbVwiIFtzdHlsZS5oZWlnaHQucHhdPVwiZ2FudHRVcHBlci5zdHlsZXMubGluZUhlaWdodFwiPlxuICAgICAgICA8c3BhbiBjbGFzcz1cIm1sLTJcIj5cbiAgICAgICAgICBAaWYgKChkYXRhLnJlZnMueCA8IGRvbS52aXNpYmxlUmFuZ2VYKCkubWluICkgJiYgZGF0YS5yZWZzLndpZHRoICkge1xuICAgICAgICAgIDxhIGNsYXNzPVwiZ2FudHQtcXVpY2stdGltZS1mb2N1cy1pdGVtLWFycm93IGxpbmstc2Vjb25kYXJ5XCIgaHJlZj1cImphdmFzY3JpcHQ6O1wiIChjbGljayk9XCJxdWlja1RpbWUoZGF0YS5vcmlnaW4sICdsZWZ0JylcIj5cbiAgICAgICAgICAgIDxnYW50dC1pY29uIGljb25OYW1lPVwiYXJyb3ctbGVmdFwiPjwvZ2FudHQtaWNvbj5cbiAgICAgICAgICA8L2E+XG4gICAgICAgICAgfVxuICAgICAgICA8L3NwYW4+XG5cbiAgICAgICAgPHNwYW4gY2xhc3M9XCJtci0yXCI+XG4gICAgICAgICAgQGlmKChkYXRhLnJlZnMueCArIGRhdGEucmVmcy53aWR0aCA+IGRvbS52aXNpYmxlUmFuZ2VYKCkubWF4KSAmJiBkYXRhLnJlZnMud2lkdGgpIHtcbiAgICAgICAgICA8YSBjbGFzcz1cImdhbnR0LXF1aWNrLXRpbWUtZm9jdXMtaXRlbS1hcnJvdyBsaW5rLXNlY29uZGFyeVwiIGhyZWY9XCJqYXZhc2NyaXB0OjtcIiAoY2xpY2spPVwicXVpY2tUaW1lKGRhdGEub3JpZ2luLCAncmlnaHQnKVwiPlxuICAgICAgICAgICAgPGdhbnR0LWljb24gaWNvbk5hbWU9XCJhcnJvdy1yaWdodFwiPjwvZ2FudHQtaWNvbj5cbiAgICAgICAgICA8L2E+XG4gICAgICAgICAgfVxuICAgICAgICA8L3NwYW4+XG4gICAgICA8L2Rpdj5cbiAgICA8L25nLWNvbnRhaW5lcj5cbiAgPC9kaXY+XG48L2Rpdj5cbn1cbiJdfQ==